{"meta":{"title":"xunhan","subtitle":"博客","description":"这是训瀚的博客","author":"xunhanliu","url":"https://www.xunhanliu.top"},"pages":[{"title":"","date":"2018-07-03T08:16:28.185Z","updated":"2018-07-03T08:16:28.185Z","comments":true,"path":"about/index.html","permalink":"https://www.xunhanliu.top/about/index.html","excerpt":"","text":"关于我从事 WEB 开发，主要开发语言 PHP，熟悉使用 Laravel、ThinkPHP 等主流框架；对 Modern PHP 情有独钟；有一定的代码洁癖。 对服务端、前端、数据分析等技能有所了解。 热爱开源项目、热爱新技术、热爱新事物。 关于工作城市：深圳 关于学习正在往终身学习者前进…近期学习方向：Python (人工智能) 关于座右铭 The Harder You Work, The Luckier You Will Be. (越努力，越幸运) 关于爱好热爱运动，尤其喜爱羽毛球、阅读、电影（Top250）、旅行。 联系我 Home: minhow.com Blog: blog.minhow.com Email: huangminhow@gmail.com GitHub: MinHow WeiBo: MinHow Twitter: MinHow"},{"title":"","date":"2018-07-05T14:45:10.836Z","updated":"2018-07-05T14:45:03.791Z","comments":true,"path":"css/test.css","permalink":"https://www.xunhanliu.top/css/test.css","excerpt":"","text":"#outCSS{ color: #0f0; }"},{"title":"","date":"2018-07-05T21:41:18.475Z","updated":"2018-07-05T21:41:18.475Z","comments":true,"path":"css/tsne-how_use/last.js","permalink":"https://www.xunhanliu.top/css/tsne-how_use/last.js","excerpt":"","text":"(function() { var format = d3.format(\",\"); d3.selectAll(\".tsne-group\").data(figures, function(d) { if(!d) return this.dataset.id; return d.id }) .each(generateFigure) function generateFigure(figure) { var FIGURE = figure.id var dis = d3.select(this) var original = dis.append(\"div\").classed(\"original\", true) original.append(\"div\") .classed(\"image\", true) .append(\"img\") .classed(\"tsne-plot\", true) .attr(\"src\", \"assets/figure_\" + FIGURE + \"_\" + \"original.png\"); original.append(\"h3\").classed(\"caption\", true).text(\"Original\") // examples var runners = dis.selectAll(\".runner\").data(figure.examples) .enter().append(\"div\").classed(\"runner\", true) if(!figure.noclick) { runners .classed(\"clickable\", true) .on(\"click\", function(d) { d3.selectAll(\".runner\").classed(\"selected\", false) updateStateFromFigure(figure, d, this); d3.select(this).classed(\"selected\", true) }); } else { runners.classed(\"no-click\", true) } runners.append(\"div\") .classed(\"image\", true) .append(\"img\") .attr(\"src\", function(d,i) { return \"assets/figure_\" + FIGURE + \"_\" + d.id + \".png\" }); if(!figure.noclick) { runners.append(\"i\") .classed(\"material-icons\", true) .text(\"open_in_browser\") } var caption = runners.append(\"div\").classed(\"caption\", true); caption.append(\"div\").text(function(d) { return \"Perplexity: \" + format(d.perplexity); }) caption.append(\"div\").text(function(d) { return \"Step: \" + format(d.step); }) } })() function nodeFromString(str) { var div = document.createElement(\"div\"); div.innerHTML = str; return div.firstChild; } function make_hover_css(pos) { var pretty = window.innerWidth > 600; var padding = pretty? 18 : 12; var outer_padding = pretty ? 18 : 0; var bbox = document.querySelector(\"body\").getBoundingClientRect(); var left = pos[0] - bbox.left, top = pos[1] - bbox.top; var width = Math.min(window.innerWidth-2*outer_padding, 648); left = Math.min(left, window.innerWidth-width-outer_padding); width = width - 2*padding; return (`position: absolute; background-color: #FFF; opacity: 0.95; max-width: ${width}px; top: ${top}px; left: ${left}px; border: 1px solid rgba(0, 0, 0, 0.25); padding: ${padding}px; border-radius: ${pretty? 3 : 0}px; box-shadow: 0px 2px 10px 2px rgba(0, 0, 0, 0.2); z-index: ${1e6};`); } function DtHoverBox(div_id) { this.div = document.querySelector(\"#\"+div_id); this.visible = false; this.bindDivEvents(); DtHoverBox.box_map[div_id] = this; } DtHoverBox.box_map = {}; DtHoverBox.get_box = function get_box(div_id) { if (div_id in DtHoverBox.box_map) { return DtHoverBox.box_map[div_id]; } else { return new DtHoverBox(div_id); } } DtHoverBox.prototype.show = function show(pos){ this.visible = true; this.div.setAttribute(\"style\", make_hover_css(pos) ); for (var box_id in DtHoverBox.box_map) { var box = DtHoverBox.box_map[box_id]; if (box != this) box.hide(); } } DtHoverBox.prototype.showAtNode = function showAtNode(node){ var bbox = node.getBoundingClientRect(); this.show([bbox.right, bbox.bottom]); } DtHoverBox.prototype.hide = function hide(){ this.visible = false; if (this.div) this.div.setAttribute(\"style\", \"display:none\"); if (this.timeout) clearTimeout(this.timeout); } DtHoverBox.prototype.stopTimeout = function stopTimeout() { if (this.timeout) clearTimeout(this.timeout); } DtHoverBox.prototype.extendTimeout = function extendTimeout(T) { //console.log(\"extend\", T) var this_ = this; this.stopTimeout(); this.timeout = setTimeout(function(){this_.hide();}.bind(this), T); } // Bind events to a link to open this box DtHoverBox.prototype.bind = function bind(node) { if (typeof node == \"string\"){ node = document.querySelector(node); } node.addEventListener(\"mouseover\", function(){ if (!this.visible) this.showAtNode(node); this.stopTimeout(); }.bind(this)); node.addEventListener(\"mouseout\", function(){this.extendTimeout(250);}.bind(this)); node.addEventListener(\"touchstart\", function(e) { if (this.visible) { this.hide(); } else { this.showAtNode(node); } // Don't trigger body touchstart event when touching link e.stopPropagation(); }.bind(this)); } DtHoverBox.prototype.bindDivEvents = function bindDivEvents(){ // For mice, same behavior as hovering on links this.div.addEventListener(\"mouseover\", function(){ if (!this.visible) this.showAtNode(node); this.stopTimeout(); }.bind(this)); this.div.addEventListener(\"mouseout\", function(){this.extendTimeout(250);}.bind(this)); // Don't trigger body touchstart event when touching within box this.div.addEventListener(\"touchstart\", function(e){e.stopPropagation();}); // Close box when touching outside box document.body.addEventListener(\"touchstart\", function(){this.hide();}.bind(this)); } var hover_es = document.querySelectorAll(\"span[data-hover-ref]\"); hover_es = [].slice.apply(hover_es); hover_es.forEach(function(e,n){ var ref_id = e.getAttribute(\"data-hover-ref\"); DtHoverBox.get_box(ref_id).bind(e); })"},{"title":"","date":"2018-07-05T21:24:40.842Z","updated":"2018-07-05T21:24:40.842Z","comments":true,"path":"css/tsne-how_use/main.css","permalink":"https://www.xunhanliu.top/css/tsne-how_use/main.css","excerpt":"","text":"#playground { overflow: hidden; font-family: 'Open Sans', sans-serif; border-top: 1px solid rgba(0, 0, 0, 0.1); /*border-bottom: 1px solid rgba(0, 0, 0, 0.1);*/ margin-top: 36px; padding: 36px 0 0 0; /*background: #fcfcfc;*/ z-index: 1000; } #playground * { box-sizing: border-box; } #playground.modal { position: fixed; left: 10px; right: 10px; top: 50px; } /* Playground Canvas */ #playground-canvas { float: left; width: 55%; } #playground-canvas canvas { width: 100%; } /* Data Menu */ #data-menu { /*float: left;*/ /*width: 25%*/ width: 40%; float: left; margin-bottom: 24px; overflow: hidden; margin-left: 5%; } #data-menu .demo-data { cursor: pointer; position: relative; font-size: 10px; line-height: 1.2em; box-sizing: border-box; float: left; margin: 2px; padding: 4px; width: calc(33% - 4px); background: white; border: 1px solid rgba(0, 0, 0, 0.1); border-radius: 4px; box-shadow: 0 0 3px rgba(0, 0, 0, 0.08); } @media(min-width: 480px) { #data-menu .demo-data { width: calc(25% - 8px); padding: 8px; margin: 4px; } } @media(min-width: 768px) { #data-menu .demo-data { width: calc(16.5% - 8px); padding: 8px; margin: 4px; } } #data-menu .demo-data:hover { border: 1px solid rgba(0, 0, 0, 0.2); } #data-menu .demo-data.selected::after { content: \"\"; border: 2px solid rgba(70, 130, 180, 0.8); width: 100%; height: 100%; position: absolute; top: 0; left: 0; box-sizing: border-box; border-radius: 4px; } #data-menu .demo-data span { display: none; } #data-menu .demo-data:hover canvas { opacity: 1; } #data-menu .demo-data canvas { width: 100%; opacity: 0.3; } #data-menu .demo-data.selected canvas { opacity: 1; } /* Data Details */ #data-details { position: relative; } @media(min-width: 768px) { #data-details { width: 40%; float: right; } } #data-details #data-controls { width: 40%; float: right; position: relative; overflow: hidden; font-size: 13px; } @media(min-width: 768px) { #data-details #data-controls { width: 50%; margin-right: 10%; float: left; } } #data-details #play-controls { margin-bottom: 18px; overflow: hidden; position: relative; } #data-details #play-controls button { cursor: pointer; outline: none; border-radius: 50%; background: steelblue; color: white; width: 25%; margin-right: 5%; padding-top: 25%; padding-bottom: 0; border: none; float: left; position: relative; } #play-controls i { display: block; position: absolute; top: 50%; left: 0; width: 100%; height: 36px; font-size: 24px; line-height: 0; } @media(min-width: 768px) { #play-controls i { font-size: 30px; } } #play-controls #play-pause i { display: none; position: absolute; } #play-controls #play-pause.paused i:nth-child(1) { display: block; } #play-controls #play-pause.playing i:nth-child(2) { display: block; } #steps-display { float: left; text-align: center; width: 25%; line-height: 1.5em; font-size: 13px; } @media(min-width: 1024px) { #steps-display { font-size: 16px; line-height: 1.6em; } } #data-details #data-description { width: 50%; margin-right: 10%; float: right; font-size: 14px; line-height: 1.6em; } @media(min-width: 768px) { #data-details #data-description { width: 40%; float: left; margin-right: 0; } } /* Options 主图1*/ #data-details #options { float: left; padding-left: 36px; font-size: 13px; line-height: 1.5em; width: 45%; } #data-details input { display: block; width: 100%; margin: 8px 0 16px 0; } #options #data-options { width: 45%; margin-left: 4px; } #options #tsne-options { width: 45%; margin-left: 4px; } #data-details #share { margin-top: 8px; display: block; color: rgba(0, 0, 0, 0.4); text-decoration: none; font-size: 12px; } #data-details #share:hover { text-decoration: underline; } #data-details #share i { line-height: 0px; position: relative; top: 7px; }"},{"title":"","date":"2018-07-05T21:39:16.269Z","updated":"2018-07-05T21:39:16.269Z","comments":true,"path":"css/tsne-how_use/main.js","permalink":"https://www.xunhanliu.top/css/tsne-how_use/main.js","excerpt":"","text":"// This depends on playground.js having setup the GLOBAL object function runTrayState() { // Set up t-SNE and start it running. var state = GLOBALS.trayState; var points = state.demo.generator.apply(null, state.demoParams); var canvas = d3.select(\"#tray-content canvas\").node() // if there was already a playground demo going, lets destroy it and make a new one if(GLOBALS.trayDemo) { GLOBALS.trayDemo.destroy(); delete GLOBALS.trayDemo; } GLOBALS.trayDemo = demoMaker(points, canvas, state, function(step) { d3.select(\"#tray-controls .step\").text(step); if(step >= state.stepLimit && !GLOBALS.trayUnpausedBefore) { setTrayRunning(false) } }) GLOBALS.trayUnpausedBefore = false; setTrayRunning(true); } function updateTraySliders() { // we regenerate all the sliders from scratch // we modify the global tray state when a slider is modified var state = GLOBALS.trayState; var dataSliders = d3.select('#tray-data-sliders'); dataSliders.html(''); state.demo.options.map(function(option, i) { var value = state.demoParams[i]; var slider = makeTraySlider(dataSliders.node(), option.name, option.min, option.max, value, function() { // when this one updates we change the appropriate state GLOBALS.trayState.demoParams[i] = +slider.value runTrayState(); }); }); var tsneSliders = d3.select('#tray-tsne-sliders'); tsneSliders.html(''); var perpSlider = makeTraySlider(tsneSliders.node(), \"Perplexity\", 1, 100, state.perplexity, function() { GLOBALS.trayState.perplexity = perpSlider.value runTrayState(); }); var epsSlider = makeTraySlider(tsneSliders.node(), \"Epsilon\", 1, 20, state.epsilon, function() { GLOBALS.trayState.epsilon = epsSlider.value runTrayState(); }); } function makeTraySlider(container, name, min, max, start, changeCallback) { var dis = d3.select(container) dis.append(\"span\").classed(\"slider-label-\" + name, true) .text(name + ' ') var value = dis.append(\"span\").classed(\"slider-value-\" + name, true) .text(start) var slider = dis.append(\"input\") .attr(\"type\", \"range\") .attr(\"min\", min) .attr(\"max\", max) .attr(\"value\", start) .on(\"change\", changeCallback) .on(\"input\", function() { value.text(slider.node().value); }) return slider.node(); } /* Activate the tray */ function updateStateFromFigure(figure, example, el) { var y = el.getBoundingClientRect().top; var demo = demosByName[figure.dataset]; var state = { demo: demos[demo.index], demoParams: figure.params.map(function(d) { return d}), perplexity: example.perplexity, epsilon: example.epsilon, stepLimit: example.step } GLOBALS.trayState = state; runTrayState() updateTraySliders() d3.select(\"#tray-container\").classed(\"modal\", true) GLOBALS.trayOpen = true; } d3.select(\"body\").on(\"keydown\", function() { if(d3.event.keyCode === 27) { setTrayRunning(false) d3.select(\"#tray-container\").classed(\"modal\", false); d3.selectAll(\".runner\").classed(\"selected\", false); } }) d3.select(\"#tray-close\").on(\"click\", function() { setTrayRunning(false); GLOBALS.trayOpen = false; d3.select(\"#tray-container\").classed(\"modal\", false) d3.selectAll(\".runner\").classed(\"selected\", false); }) /* Tray Controls */ var trayPlay = d3.select(\"#tray-controls .play-pause\") function setTrayRunning(r) { GLOBALS.running = r; if (GLOBALS.running) { GLOBALS.trayDemo.unpause(); trayPlay .classed(\"playing\", true) .classed(\"paused\", false); } else { GLOBALS.trayDemo.pause(); trayPlay .classed(\"playing\", false) .classed(\"paused\", true); } } // Hook up play / pause / restart buttons. trayPlay.on(\"click\", function() { GLOBALS.trayUnpausedBefore = true; setTrayRunning(!GLOBALS.running); }); var trayRestart = d3.select(\"#tray-controls .restart\") .on(\"click\", function() { runTrayState(); }) d3.select(window).on(\"scroll.tray\", function() { if(GLOBALS.trayOpen) { if(scrollY < 1000) { setTrayRunning(false); GLOBALS.trayOpen = false; d3.select(\"#tray-container\").classed(\"modal\", false); d3.selectAll(\".runner\").classed(\"selected\", false); } } });"},{"title":"","date":"2018-07-05T13:13:33.754Z","updated":"2018-07-05T13:06:29.131Z","comments":true,"path":"css/tsne-how_use/material-icons.css","permalink":"https://www.xunhanliu.top/css/tsne-how_use/material-icons.css","excerpt":"","text":"@font-face { font-family: 'Material Icons'; font-style: normal; font-weight: 400; src: local('Material Icons'), local('MaterialIcons-Regular'), url(MaterialIcons-Regular.woff) format('woff'); } .material-icons { font-family: 'Material Icons'; font-weight: normal; font-style: normal; font-size: 24px; /* Preferred icon size */ display: inline-block; line-height: 1; text-transform: none; letter-spacing: normal; word-wrap: normal; white-space: nowrap; direction: ltr; /* Support for all WebKit browsers. */ -webkit-font-smoothing: antialiased; /* Support for Safari and Chrome. */ text-rendering: optimizeLegibility; /* Support for Firefox. */ -moz-osx-font-smoothing: grayscale; /* Support for IE. */ font-feature-settings: 'liga'; }"}],"posts":[{"title":"t-sne之初体验","slug":"t-sne_how_use","date":"2018-07-05T17:00:00.000Z","updated":"2018-07-06T17:10:13.628Z","comments":true,"path":"2018/07/06/t-sne_how_use/","link":"","permalink":"https://www.xunhanliu.top/2018/07/06/t-sne_how_use/","excerpt":"","text":"How to Use t-SNE Effectively #tray-container { width: 100%; position: fixed; top: 0; left: 0; z-index: 100; top: -410px; transition: top 0.3s; } #tray { position: relative; border: 2px solid steelblue; background: white; padding: 24px 24px 60px 24px; box-shadow: 0px 2px 24px rgba(0, 0, 0, 0.2); box-sizing: border-box; margin: 0 auto; height: 380px; display: flex; justify-content: center; max-width: 700px; border-radius: 4px; } #tray-container.modal { top: -4px; } #tray-content { width: 55%; height: 100%; font-size: 12px; position: relative; top: -12px; } #tray-content canvas { width: 100%; } #tray-options { padding-left: 36px; font-size: 13px; line-height: 1.5em; height: 100%; width: 45%; } #tray-options #tray-controls { margin-bottom: 24px; display: flex; align-items: center; } #tray-controls button { cursor: pointer; outline: none; border-radius: 50%; background: steelblue; color: white; width: 48px; height: 48px; border: none; margin-right: 12px; } #tray-controls .play-pause i { display: none; font-size: 30px; } #tray-controls .play-pause.paused i:nth-child(1) { display: block; } #tray-controls .play-pause.playing i:nth-child(2) { display: block; } #tray-steps-display { text-align: center; width: 48px; font-size: 15px; } #tray input { margin-bottom: 12px; margin-left: -2px; } #tray-data-sliders { } #tray-tsne-sliders { } #tray-close { cursor: pointer; outline: none; background: white; border: none; text-align: center; position: absolute; bottom: 0; width: 100%; padding: 6px 0; background: #f0f4f5; opacity: 0.6; color: steelblue; left: 0; } #tray-close:hover { opacity: 1; } play_arrow pause refresh Step: expand_less // This depends on playground.js having setup the GLOBAL object function runTrayState() { // Set up t-SNE and start it running. var state = GLOBALS.trayState; var points = state.demo.generator.apply(null, state.demoParams); var canvas = d3.select(\"#tray-content canvas\").node() // if there was already a playground demo going, lets destroy it and make a new one if(GLOBALS.trayDemo) { GLOBALS.trayDemo.destroy(); delete GLOBALS.trayDemo; } GLOBALS.trayDemo = demoMaker(points, canvas, state, function(step) { d3.select(\"#tray-controls .step\").text(step); if(step >= state.stepLimit && !GLOBALS.trayUnpausedBefore) { setTrayRunning(false) } }) GLOBALS.trayUnpausedBefore = false; setTrayRunning(true); } function updateTraySliders() { // we regenerate all the sliders from scratch // we modify the global tray state when a slider is modified var state = GLOBALS.trayState; var dataSliders = d3.select('#tray-data-sliders'); dataSliders.html(''); state.demo.options.map(function(option, i) { var value = state.demoParams[i]; var slider = makeTraySlider(dataSliders.node(), option.name, option.min, option.max, value, function() { // when this one updates we change the appropriate state GLOBALS.trayState.demoParams[i] = +slider.value runTrayState(); }); }); var tsneSliders = d3.select('#tray-tsne-sliders'); tsneSliders.html(''); var perpSlider = makeTraySlider(tsneSliders.node(), \"Perplexity\", 1, 100, state.perplexity, function() { GLOBALS.trayState.perplexity = perpSlider.value runTrayState(); }); var epsSlider = makeTraySlider(tsneSliders.node(), \"Epsilon\", 1, 20, state.epsilon, function() { GLOBALS.trayState.epsilon = epsSlider.value runTrayState(); }); } function makeTraySlider(container, name, min, max, start, changeCallback) { var dis = d3.select(container) dis.append(\"span\").classed(\"slider-label-\" + name, true) .text(name + ' ') var value = dis.append(\"span\").classed(\"slider-value-\" + name, true) .text(start) var slider = dis.append(\"input\") .attr(\"type\", \"range\") .attr(\"min\", min) .attr(\"max\", max) .attr(\"value\", start) .on(\"change\", changeCallback) .on(\"input\", function() { value.text(slider.node().value); }) return slider.node(); } /* Activate the tray */ function updateStateFromFigure(figure, example, el) { var y = el.getBoundingClientRect().top; var demo = demosByName[figure.dataset]; var state = { demo: demos[demo.index], demoParams: figure.params.map(function(d) { return d}), perplexity: example.perplexity, epsilon: example.epsilon, stepLimit: example.step } GLOBALS.trayState = state; runTrayState() updateTraySliders() d3.select(\"#tray-container\").classed(\"modal\", true) GLOBALS.trayOpen = true; } d3.select(\"body\").on(\"keydown\", function() { if(d3.event.keyCode === 27) { setTrayRunning(false) d3.select(\"#tray-container\").classed(\"modal\", false); d3.selectAll(\".runner\").classed(\"selected\", false); } }) d3.select(\"#tray-close\").on(\"click\", function() { setTrayRunning(false); GLOBALS.trayOpen = false; d3.select(\"#tray-container\").classed(\"modal\", false) d3.selectAll(\".runner\").classed(\"selected\", false); }) /* Tray Controls */ var trayPlay = d3.select(\"#tray-controls .play-pause\") function setTrayRunning(r) { GLOBALS.running = r; if (GLOBALS.running) { GLOBALS.trayDemo.unpause(); trayPlay .classed(\"playing\", true) .classed(\"paused\", false); } else { GLOBALS.trayDemo.pause(); trayPlay .classed(\"playing\", false) .classed(\"paused\", true); } } // Hook up play / pause / restart buttons. trayPlay.on(\"click\", function() { GLOBALS.trayUnpausedBefore = true; setTrayRunning(!GLOBALS.running); }); var trayRestart = d3.select(\"#tray-controls .restart\") .on(\"click\", function() { runTrayState(); }) d3.select(window).on(\"scroll.tray\", function() { if(GLOBALS.trayOpen) { if(scrollY < 1000) { setTrayRunning(false); GLOBALS.trayOpen = false; d3.select(\"#tray-container\").classed(\"modal\", false); d3.selectAll(\".runner\").classed(\"selected\", false); } } }); /* Tray sliders */ How to Use t-SNE Effectively Although extremely useful for visualizing high-dimensional data, t-SNE plots can sometimes be mysterious or misleading. By exploring how it behaves in simple cases, we can learn to use it more effectively. #playground { overflow: hidden; font-family: 'Open Sans', sans-serif; border-top: 1px solid rgba(0, 0, 0, 0.1); /*border-bottom: 1px solid rgba(0, 0, 0, 0.1);*/ margin-top: 36px; padding: 36px 0 0 0; /*background: #fcfcfc;*/ z-index: 1000; } #playground * { box-sizing: border-box; } #playground.modal { position: fixed; left: 10px; right: 10px; top: 50px; } /* Playground Canvas */ #playground-canvas { float: left; width: 55%; } #playground-canvas canvas { width: 100%; } /* Data Menu */ #data-menu { /*float: left;*/ /*width: 25%*/ width: 40%; float: left; margin-bottom: 24px; overflow: hidden; margin-left: 5%; } #data-menu .demo-data { cursor: pointer; position: relative; font-size: 10px; line-height: 1.2em; box-sizing: border-box; float: left; margin: 2px; padding: 4px; width: calc(33% - 4px); background: white; border: 1px solid rgba(0, 0, 0, 0.1); border-radius: 4px; box-shadow: 0 0 3px rgba(0, 0, 0, 0.08); } @media(min-width: 480px) { #data-menu .demo-data { width: calc(25% - 8px); padding: 8px; margin: 4px; } } @media(min-width: 768px) { #data-menu .demo-data { width: calc(16.5% - 8px); padding: 8px; margin: 4px; } } #data-menu .demo-data:hover { border: 1px solid rgba(0, 0, 0, 0.2); } #data-menu .demo-data.selected::after { content: \"\"; border: 2px solid rgba(70, 130, 180, 0.8); width: 100%; height: 100%; position: absolute; top: 0; left: 0; box-sizing: border-box; border-radius: 4px; } #data-menu .demo-data span { display: none; } #data-menu .demo-data:hover canvas { opacity: 1; } #data-menu .demo-data canvas { width: 100%; opacity: 0.3; } #data-menu .demo-data.selected canvas { opacity: 1; } /* Data Details */ #data-details { position: relative; } @media(min-width: 768px) { #data-details { width: 40%; float: right; } } #data-details #data-controls { width: 40%; float: right; position: relative; overflow: hidden; font-size: 13px; } @media(min-width: 768px) { #data-details #data-controls { width: 50%; margin-right: 10%; float: left; } } #data-details #play-controls { margin-bottom: 18px; overflow: hidden; position: relative; } #data-details #play-controls button { cursor: pointer; outline: none; border-radius: 50%; background: steelblue; color: white; width: 25%; margin-right: 5%; padding-top: 25%; padding-bottom: 0; border: none; float: left; position: relative; } #play-controls i { display: block; position: absolute; top: 50%; left: 0; width: 100%; height: 36px; font-size: 24px; line-height: 0; } @media(min-width: 768px) { #play-controls i { font-size: 30px; } } #play-controls #play-pause i { display: none; position: absolute; } #play-controls #play-pause.paused i:nth-child(1) { display: block; } #play-controls #play-pause.playing i:nth-child(2) { display: block; } #steps-display { float: left; text-align: center; width: 25%; line-height: 1.5em; font-size: 13px; } @media(min-width: 1024px) { #steps-display { font-size: 16px; line-height: 1.6em; } } #data-details #data-description { width: 50%; margin-right: 10%; float: right; font-size: 14px; line-height: 1.6em; } @media(min-width: 768px) { #data-details #data-description { width: 40%; float: left; margin-right: 0; } } /* Options */ #data-details #options { float: left; padding-left: 36px; font-size: 13px; line-height: 1.5em; width: 45%; } #data-details input { display: block; width: 100%; margin: 8px 0 16px 0; } #options #data-options { width: 45%; margin-left: 4px; } #options #tsne-options { width: 45%; margin-left: 4px; } #data-details #share { margin-top: 8px; display: block; color: rgba(0, 0, 0, 0.4); text-decoration: none; font-size: 12px; } #data-details #share:hover { text-decoration: underline; } #data-details #share i { line-height: 0px; position: relative; top: 7px; } play_arrowpause refresh Step link Share this view A popular method for exploring high-dimensional data is something called t-SNE, introduced by van der Maaten and Hinton in 2008 [1]. The technique has become widespread in the field of machine learning, since it has an almost magical ability to create compelling two-dimensonal “maps” from data with hundreds or even thousands of dimensions. Although impressive, these images can be tempting to misread. The purpose of this note is to prevent some common misreadings. We’ll walk through a series of simple examples to illustrate what t-SNE diagrams can and cannot show. The t-SNE technique really is useful—but only if you know how to interpret it. Before diving in: if you haven’t encountered t-SNE before, here’s what you need to know about the math behind it. The goal is to take a set of points in a high-dimensional space and find a faithful representation of those points in a lower-dimensional space, typically the 2D plane. The algorithm is non-linear and adapts to the underlying data, performing different transformations on different regions. Those differences can be a major source of confusion. A second feature of t-SNE is a tuneable parameter, “perplexity,” which says (loosely) how to balance attention between local and global aspects of your data. The parameter is, in a sense, a guess about the number of close neighbors each point has. The perplexity value has a complex effect on the resulting pictures. The original paper says, “The performance of SNE is fairly robust to changes in the perplexity, and typical values are between 5 and 50.” But the story is more nuanced than that. Getting the most from t-SNE may mean analyzing multiple plots with different perplexities. That’s not the end of the complications. The t-SNE algorithm doesn’t always produce similar output on successive runs, for example, and there are additional hyperparameters related to the optimization process. 1. Those hyperparameters really matter Let’s start with the “hello world” of t-SNE: a data set of two widely separated clusters. To make things as simple as possible, we’ll consider clusters in a 2D plane, as shown in the lefthand diagram. (For clarity, the two clusters are color coded.) The diagrams at right show t-SNE plots for five different perplexity values. With perplexity values in the range (5 - 50) suggested by van der Maaten &amp; Hinton, the diagrams do show these clusters, although with very different shapes. Outside that range, things get a little weird. With perplexity 2, local variations dominate. The image for perplexity 100, with merged clusters, illustrates a pitfall: for the algorithm to operate properly, the perplexity really should be smaller than the number of points. Implementations can give unexpected behavior otherwise. Each of the plots above was made with 5,000 iterations with a learning rate (often called “epsilon”) of 10, and had reached a point of stability by step 5,000. How much of a difference do those values make? In our experience, the most important thing is to iterate until reaching a stable configuration. The images above show five different runs at perplexity 30. The first four were stopped before stability. After 10, 20, 60, and 120 steps you can see layouts with seeming 1-dimensional and even pointlike images of the clusters. If you see a t-SNE plot with strange “pinched” shapes, chances are the process was stopped too early. Unfortunately, there’s no fixed number of steps that yields a stable result. Different data sets can require different numbers of iterations to converge. Another natural question is whether different runs with the same hyperparameters produce the same results. In this simple two-cluster example, and most of the others we discuss, multiple runs give the same global shape. Certain data sets, however, yield markedly different diagrams on different runs; we’ll give an example of one of these later. From now on, unless otherwise stated, we’ll show results from 5,000 iterations. That’s generally enough for convergence in the (relatively small) examples in this essay. We’ll keep showing a range of perplexities, however, since that seems to make a big difference in every case. 2. Cluster sizes in a t-SNE plot mean nothing So far, so good. But what if the two clusters have different standard deviations, and so different sizes? (By size we mean bounding box measurements, not number of points.) Below are t-SNE plots for a mixture of Gaussians in plane, where one is 10 times as dispersed as the other. Surprisingly, the two clusters look about same size in the t-SNE plots. What’s going on? The t-SNE algorithm adapts its notion of “distance” to regional density variations in the data set. As a result, it naturally expands dense clusters, and contracts sparse ones, evening out cluster sizes. To be clear, this is a different effect than the run-of-the-mill fact that any dimensionality reduction technique will distort distances. (After all, in this example all data was two-dimensional to begin with.) Rather, density equalization happens by design and is a predictable feature of t-SNE. The bottom line, however, is that you cannot see relative sizes of clusters in a t-SNE plot. 3. Distances between clusters might not mean anything What about distances between clusters? The next diagrams show three Gaussians of 50 points each, one pair being 5 times as far apart as another pair. At perplexity 50, the diagram gives a good sense of the global geometry. For lower perplexity values the clusters look equidistant. When the perplexity is 100, we see the global geometry fine, but one of the cluster appears, falsely, much smaller than the others. Since perplexity 50 gave us a good picture in this example, can we always set perplexity to 50 if we want to see global geometry? Sadly, no. If we add more points to each cluster, the perplexity has to increase to compensate. Here are the t-SNE diagrams for three Gaussian clusters with 200 points each, instead of 50. Now none of the trial perplexity values gives a good result. It’s bad news that seeing global geometry requires fine-tuning perplexity. Real-world data would probably have multiple clusters with different numbers of elements. There may not be one perplexity value that will capture distances across all clusters—and sadly perplexity is a global parameter. Fixing this problem might be an interesting area for future research. The basic message is that distances between well-separated clusters in a t-SNE plot may mean nothing. 4. Random noise doesn’t always look random. A classic pitfall is thinking you see patterns in what is really just random data. Recognizing noise when you see it is a critical skill, but it takes time to build up the right intuitions. A tricky thing about t-SNE is that it throws a lot of existing intuition out the window. The next diagrams show genuinely random data, 500 points drawn from a unit Gaussian distribution in 100 dimensions. The left image is a projection onto the first two coordinates. The plot with perplexity 2 seems to show dramatic clusters. If you were tuning perplexity to bring out structure in the data, you might think you’d hit the jackpot. Of course, since we know the cloud of points was generated randomly, it has no statistically interesting clusters: those “clumps” aren’t meaningful. If you look back at previous examples, low perplexity values often lead to this kind of distribution. Recognizing these clumps as random noise is an important part of reading t-SNE plots. There’s something else interesting, though, which may be a win for t-SNE. At first the perplexity 30 plot doesn’t look like a Gaussian distribution at all: there’s only a slight density difference across different regions of the cloud, and the points seem suspiciously evenly distributed. In fact, these features are saying useful things about high-dimensional normal distributions, which are very close to uniform distributions on a sphere: evenly distributed, with roughly equal spaces between points. Seen in this light, the t-SNE plot is more accurate than any linear projection could be. 5. You can see some shapes, sometimes It’s rare for data to be distributed in a perfectly symmetric way. Let’s take a look at an axis-aligned Gaussian distribution in 50 dimensions, where the standard deviation in coordinate i is 1/i. That is, we’re looking at a long-ish ellipsoidal cloud of points. For high enough perplexity values, the elongated shapes are easy to read. On the other hand, at low perplexity, local effects and meaningless “clumping” take center stage. More extreme shapes also come through, but again only at the right perplexity. For example, here are two clusters of 75 points each in 2D, arranged in parallel lines with a bit of noise. For a certain range of perplexity the long clusters look close to correct, which is reassuring. Even in the best cases, though, there’s a subtle distortion: the lines are slightly curved outwards in the t-SNE diagram. The reason is that, as usual, t-SNE tends to expand denser regions of data. Since the middles of the clusters have less empty space around them than the ends, the algorithm magnifies them. 6. For topology, you may need more than one plot Sometimes you can read topological information off a t-SNE plot, but that typically requires views at multiple perplexities. One of the simplest topological properties is containment. The plots below show two groups of 75 points in 50 dimensional space. Both are sampled from symmetric Gaussian distributions centered at the origin, but one is 50 times more tightly dispersed than the other. The “small” distribution is in effect contained in the large one. The perplexity 30 view shows the basic topology correctly, but again t-SNE greatly exaggerates the size of the smaller group of points. At perplexity 50, there’s a new phenomenon: the outer group becomes a circle, as the plot tries to depict the fact that all its points are about the same distance from the inner group. If you looked at this image alone, it would be easy to misread these outer points as a one-dimensional structure. What about more complicated types of topology? This may be a subject dearer to mathematicians than to practical data analysts, but interesting low-dimensional structures are occasionally found in the wild. Consider a set of points that trace a link or a knot in three dimensions. Once again, looking at multiple perplexity values gives the most complete picture. Low perplexity values give two completely separate loops; high ones show a kind of global connectivity. The trefoil knot is an interesting example of how multiple runs affect the outcome of t-SNE. Below are five runs of the perplexity-2 view. The algorithm settles twice on a circle, which at least preserves the intrinsic topology. But in three of the runs it ends up with three different solutions which introduce artificial breaks. Using the dot color as a guide, you can see that the first and third runs are far from each other. Five runs at perplexity 50, however, give results that (up to symmetry) are visually identical. Evidently some problems are easier than others to optimize. Conclusion There’s a reason that t-SNE has become so popular: it’s incredibly flexible, and can often find structure where other dimensionality-reduction algorithms cannot. Unfortunately, that very flexibility makes it tricky to interpret. Out of sight from the user, the algorithm makes all sorts of adjustments that tidy up its visualizations. Don’t let the hidden “magic” scare you away from the whole technique, though. The good news is that by studying how t-SNE behaves in simple cases, it’s possible to develop an intuition for what’s going on. .tsne-group { overflow: visible; display: -webkit-flex; display: flex; flex-direction: column; margin-top: 36px; margin-bottom: 36px; } @media(min-width: 640px) { .tsne-group { -webkit-flex-direction: row; flex-direction: row; } } .tsne-group .original, .tsne-group .runner { box-sizing: border-box; -webkit-flex-grow: 1; flex-grow: 1; position: relative; display: -webkit-flex; display: flex; margin-bottom: 12px; } .tsne-group .original { position: relative; border-bottom: 1px solid rgba(0, 0, 0, 0.1); padding-bottom: 12px; } @media(min-width: 640px) { .tsne-group .original, .tsne-group .runner { display: block; width: 100%; margin-bottom: 0; } .tsne-group .original { margin-left: 0; padding-right: 12px; border-right: 1px solid rgba(0, 0, 0, 0.1); border-bottom: none; padding-bottom: 0; } .tsne-group .runner { margin-left: 12px; } } .tsne-group .runner.no-click { cursor: default; } .runner.clickable { cursor: pointer; } .runner.clickable:hover .image { box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08); } .runner:hover i { opacity: 1; } .runner.selected i { opacity: 1; } .runner i { font-size: 30px; position: absolute; top: 1px; left: 1px; background-color: hsla(207, 44%, 79%, 0.8); color: steelblue; border-radius: 4px; opacity: 0; transition: opacity 0.3s; line-height: 0; width: 150px; padding: 75px 0; text-align: center; } @media(min-width: 640px) { .runner i { width: 100%; padding: 50% 0; } } .runner.selected .image::after { content: \"\"; border: 2px solid rgba(70, 130, 180, 1); width: 100%; height: 100%; position: absolute; top: 0; box-sizing: border-box; border-radius: 4px; z-index: 10; } .tsne-group .image { border: 1px solid rgba(0, 0, 0, 0.1); border-radius: 4px; box-shadow: 0 0 6px rgba(0, 0, 0, 0.08); width: 150px; padding-top: 150px; background: white; position: relative; transition: border-color 0.3s, box-shadow 0.3s; margin-right: 12px; } @media(min-width: 640px) { .tsne-group .image { width: 100%; padding-top: 100%; margin-right: 0; } } .tsne-group .original .image { box-shadow: none; } .tsne-group .image img { position: absolute; top: 5%; left: 5%; width: 90%; } .tsne-group h3.caption { font-size: 15px; margin-top: 12px; } .tsne-group .caption { font-size: 12px; line-height: 1.6em; margin-top: 12px; width: 100px; } @media(min-width: 640px) { .tsne-group .caption, .tsne-group h3.caption { margin-top: 8px; width: 100%; } } (function() { var format = d3.format(\",\"); d3.selectAll(\".tsne-group\").data(figures, function(d) { if(!d) return this.dataset.id; return d.id }) .each(generateFigure) function generateFigure(figure) { var FIGURE = figure.id var dis = d3.select(this) var original = dis.append(\"div\").classed(\"original\", true) original.append(\"div\") .classed(\"image\", true) .append(\"img\") .classed(\"tsne-plot\", true) .attr(\"src\", \"./figure_\" + FIGURE + \"_\" + \"original.png\"); original.append(\"h3\").classed(\"caption\", true).text(\"Original\") // examples var runners = dis.selectAll(\".runner\").data(figure.examples) .enter().append(\"div\").classed(\"runner\", true) if(!figure.noclick) { runners .classed(\"clickable\", true) .on(\"click\", function(d) { d3.selectAll(\".runner\").classed(\"selected\", false) updateStateFromFigure(figure, d, this); d3.select(this).classed(\"selected\", true) }); } else { runners.classed(\"no-click\", true) } runners.append(\"div\") .classed(\"image\", true) .append(\"img\") .attr(\"src\", function(d,i) { return \"./figure_\" + FIGURE + \"_\" + d.id + \".png\" }); if(!figure.noclick) { runners.append(\"i\") .classed(\"material-icons\", true) .text(\"open_in_browser\") } var caption = runners.append(\"div\").classed(\"caption\", true); caption.append(\"div\").text(function(d) { return \"Perplexity: \" + format(d.perplexity); }) caption.append(\"div\").text(function(d) { return \"Step: \" + format(d.step); }) } })() dt-cite { color: hsla(206, 90%, 20%, 0.7); } dt-cite .citation-number { cursor: default; white-space: nowrap; font-family: -apple-system, BlinkMacSystemFont, \"Roboto\", Helvetica, sans-serif; font-size: 75%; color: hsla(206, 90%, 20%, 0.7); display: inline-block; line-height: 1.1em; text-align: center; position: relative; top: -2px; margin: 0 2px; } figcaption dt-cite .citation-number { font-size: 11px; font-weight: normal; top: -2px; line-height: 1em; } Visualizing data using t-SNE [PDF]L.v.d. Maaten, G. Hinton.Journal of Machine Learning Research, Vol 9(Nov), pp. 2579—2605. 2008. function nodeFromString(str) { var div = document.createElement(\"div\"); div.innerHTML = str; return div.firstChild; } function make_hover_css(pos) { var pretty = window.innerWidth > 600; var padding = pretty? 18 : 12; var outer_padding = pretty ? 18 : 0; var bbox = document.querySelector(\"body\").getBoundingClientRect(); var left = pos[0] - bbox.left, top = pos[1] - bbox.top; var width = Math.min(window.innerWidth-2*outer_padding, 648); left = Math.min(left, window.innerWidth-width-outer_padding); width = width - 2*padding; return (`position: absolute; background-color: #FFF; opacity: 0.95; max-width: ${width}px; top: ${top}px; left: ${left}px; border: 1px solid rgba(0, 0, 0, 0.25); padding: ${padding}px; border-radius: ${pretty? 3 : 0}px; box-shadow: 0px 2px 10px 2px rgba(0, 0, 0, 0.2); z-index: ${1e6};`); } function DtHoverBox(div_id) { this.div = document.querySelector(\"#\"+div_id); this.visible = false; this.bindDivEvents(); DtHoverBox.box_map[div_id] = this; } DtHoverBox.box_map = {}; DtHoverBox.get_box = function get_box(div_id) { if (div_id in DtHoverBox.box_map) { return DtHoverBox.box_map[div_id]; } else { return new DtHoverBox(div_id); } } DtHoverBox.prototype.show = function show(pos){ this.visible = true; this.div.setAttribute(\"style\", make_hover_css(pos) ); for (var box_id in DtHoverBox.box_map) { var box = DtHoverBox.box_map[box_id]; if (box != this) box.hide(); } } DtHoverBox.prototype.showAtNode = function showAtNode(node){ var bbox = node.getBoundingClientRect(); this.show([bbox.right, bbox.bottom]); } DtHoverBox.prototype.hide = function hide(){ this.visible = false; if (this.div) this.div.setAttribute(\"style\", \"display:none\"); if (this.timeout) clearTimeout(this.timeout); } DtHoverBox.prototype.stopTimeout = function stopTimeout() { if (this.timeout) clearTimeout(this.timeout); } DtHoverBox.prototype.extendTimeout = function extendTimeout(T) { //console.log(\"extend\", T) var this_ = this; this.stopTimeout(); this.timeout = setTimeout(function(){this_.hide();}.bind(this), T); } // Bind events to a link to open this box DtHoverBox.prototype.bind = function bind(node) { if (typeof node == \"string\"){ node = document.querySelector(node); } node.addEventListener(\"mouseover\", function(){ if (!this.visible) this.showAtNode(node); this.stopTimeout(); }.bind(this)); node.addEventListener(\"mouseout\", function(){this.extendTimeout(250);}.bind(this)); node.addEventListener(\"touchstart\", function(e) { if (this.visible) { this.hide(); } else { this.showAtNode(node); } // Don't trigger body touchstart event when touching link e.stopPropagation(); }.bind(this)); } DtHoverBox.prototype.bindDivEvents = function bindDivEvents(){ // For mice, same behavior as hovering on links this.div.addEventListener(\"mouseover\", function(){ if (!this.visible) this.showAtNode(node); this.stopTimeout(); }.bind(this)); this.div.addEventListener(\"mouseout\", function(){this.extendTimeout(250);}.bind(this)); // Don't trigger body touchstart event when touching within box this.div.addEventListener(\"touchstart\", function(e){e.stopPropagation();}); // Close box when touching outside box document.body.addEventListener(\"touchstart\", function(){this.hide();}.bind(this)); } var hover_es = document.querySelectorAll(\"span[data-hover-ref]\"); hover_es = [].slice.apply(hover_es); hover_es.forEach(function(e,n){ var ref_id = e.getAttribute(\"data-hover-ref\"); DtHoverBox.get_box(ref_id).bind(e); })","categories":[{"name":"test","slug":"test","permalink":"https://www.xunhanliu.top/categories/test/"}],"tags":[{"name":"test","slug":"test","permalink":"https://www.xunhanliu.top/tags/test/"}]},{"title":"test","slug":"test","date":"2018-07-03T16:58:20.000Z","updated":"2018-07-05T14:24:16.394Z","comments":true,"path":"2018/07/04/test/","link":"","permalink":"https://www.xunhanliu.top/2018/07/04/test/","excerpt":"","text":"测试图片链接连接为：&lt;%- url_for(post.path) %&gt;连接1为：&lt;%- url_for(path) %&gt;连接2为：&lt;%- url_for(page.path) %&gt;ssss","categories":[{"name":"mCat1","slug":"mCat1","permalink":"https://www.xunhanliu.top/categories/mCat1/"}],"tags":[{"name":"mtag1","slug":"mtag1","permalink":"https://www.xunhanliu.top/tags/mtag1/"},{"name":"mtag2","slug":"mtag2","permalink":"https://www.xunhanliu.top/tags/mtag2/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-07-31T16:00:00.000Z","updated":"2018-07-03T19:05:09.545Z","comments":true,"path":"2017/08/01/hello-world/","link":"","permalink":"https://www.xunhanliu.top/2017/08/01/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"开源项目","slug":"开源项目","permalink":"https://www.xunhanliu.top/categories/开源项目/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://www.xunhanliu.top/tags/博客/"},{"name":"开源项目","slug":"开源项目","permalink":"https://www.xunhanliu.top/tags/开源项目/"}]},{"title":"MiHo-主题安装和配置详情","slug":"installation-configuration","date":"2017-07-31T16:00:00.000Z","updated":"2018-07-05T03:07:16.441Z","comments":true,"path":"2017/08/01/installation-configuration/","link":"","permalink":"https://www.xunhanliu.top/2017/08/01/installation-configuration/","excerpt":"","text":"一. 主题简介&emsp;&emsp;MiHo 是一款单栏响应式的Hexo主题；基于 Hexo 3.0+ 制作，兼容移动端浏览；主题的代码托管在GitHub上，欢迎Star和Fork；如遇到问题或发表建议，可以提Issues，也可以在博客中留言给我，另外,喜欢的话不妨给个 Star。 二. 安装2.1 安装主题1$ git clone https://github.com/WongMinHo/hexo-theme-miho.git themes/miho MiHo 主题需要Hexo 3.0或以上版本，请先升级。 2.2 更新12cd themes/mihogit pull 2.3 依赖安装如下依赖如果已经安装，请看配置介绍。 Json-content生成站点文章静态数据，用于站内搜索。1npm install hexo-generator-json-content --save 三. 站点配置站点配置文件_config.yml在hexo根目录下。 3.1 启用主题1`theme: miho` 3.2 网站基本配置以下配置是站点的全局配置，更多配置，请查看123456title: MinHow's Blogsubtitle: 网站副标题description: 专注 WEB 开发的技术博客author: MinHowlanguage: 网站使用的语言timezone: 网站时区 3.3 jsonContent配置详细的配置请查看hexo-generator-json-content123456789101112131415161718jsonContent: meta: false pages: false posts: title: true date: true path: true text: false raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: false 四. 主题配置编辑主题配置文件，themes/miho/_config.yml。 4.1 属性下面将介绍几个比较重要的配置。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122# hexo-theme-miho# https://github.com/wongminho/hexo-theme-miho# Favicon of your site | 网站iconfavicon: /favicon.ico# Header# Keywords of your site | 网站关键字keywords: MinHow,MinHow's Blog# Head headline | 头部标题header_title: MinHow's Blog# Head description | 头部描述header_description: 一个专注 WEB 开发的技术博客# Link to your logo | logo地址logo: images/logo.png# Link to your banner_img | 首页banner图地址banner_img: images/banner.jpg# Menu setting | 菜单设置# name: Font Awesome icon | Font Awesome 图标# title: Home Title | 标题# url: //minhow.com Url, absolute or relative path | 链接，绝对或相对路径# target: true Whether to jump out | 是否跳出menu: home: title: Home url: / target: false archive: title: Archives url: /archives target: false user: title: About url: /about target: false# Social setting, use to display social information | 社交设置，用来展示社交信息# name: Font Awesome icon | Font Awesome 图标# title: Home Icon title | 图标标题# url: //minhow.com Url, absolute or relative path | 链接，绝对或相对路径# target: true Whether to jump out | 是否跳出social: home: title: MinHow url: //minhow.com target: true github: title: Github url: //github.com/wongminho target: true weibo: title: Weibo url: //weibo.com/WongMinHo target: true twitter: title: Twitter url: //twitter.com/huangminhow target: true #qq: #weixin: #snapchat: #telegram: #mail: #facebook: #google: #linkedin:# Content# Excerpt length | 摘录长度excerpt_length: 190# Excerpt link | 摘录链接excerpt_link: more&gt;&gt;# New window open link | 新窗口打开文章open_new_link: false# Article default cover picture，size：350*150 | 文章默认封面图，尺寸：350*150cover_picture: images/banner.jpg# Open background particles | 开启背景粒子open_bg_particle: true# Open animation in homepage and head | 开启主页及头部动画open_animation: true# Article# Open toc | 是否开启toctoc: true# Open share | 是否开启分享share: true# Style customization | 样式定制style: # Main color tone | 主色调 main_color: '#0cc'# Comments | 评论# 畅言，输入appid和appkeychangyan_appid: falsechangyan_appkey: false# 友言，输入idyouyan_id: false# disqusdisqus: false# Analytics | 分析# 站长分析，输入站点idcnzz_analytics: false# 百度分析，输入key值baidu_analytics: false# google analytics | google分析google_analytics: false# Footer# Access statistics | “不蒜子”访问量统计access_counter: on: true site_uv: 总访客数： site_pv: 总访问量：# Copyright Information | 版权信息copyright: 2017 MinHow 4.2 文章封面图文章默认封面图，尺寸：350*150，当文章基本配置没有cover_picture时才显示。1cover_picture: images/banner.jpg 4.3 开启背景粒子是否开启背景粒子。1open_bg_particle: true 4.4 开启主页及头部动画是否开启主页及头部动画。1open_animation: true 4.5 评论支持畅言、disqus。1234567# 畅言，输入appid和appkeychangyan_appid: falsechangyan_appkey: false# 友言，输入idyouyan_id: false# disqusdisqus: false 4.6 数据统计支持站长、百度、google三种数据统计，正确填写配置信息即可。123456# 站长分析，输入站点idcnzz_analytics: false# 百度分析，输入key值baidu_analytics: false# google分析google_analytics: false 4.7 文章基本配置123456789101112---title: Hello Worlddate: 2017-06-18categories: Firstauthor: MinHowtags: - First - Secondcover_picture: /images/banner.jpg--- MinHow-This is a summary&lt;!-- more --&gt; 说明： 需要注意tags和摘要的写法，不然首页不能正确显示标签和摘要； cover_picture文章封面图，不填默认显示_config.yml配置的图片。","categories":[{"name":"开源项目","slug":"开源项目","permalink":"https://www.xunhanliu.top/categories/开源项目/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://www.xunhanliu.top/tags/博客/"},{"name":"开源项目","slug":"开源项目","permalink":"https://www.xunhanliu.top/tags/开源项目/"}]},{"title":"md文件模板+html","slug":"testHtml","date":"2017-07-31T16:00:00.000Z","updated":"2018-07-05T14:12:53.123Z","comments":true,"path":"2017/08/01/testHtml/","link":"","permalink":"https://www.xunhanliu.top/2017/08/01/testHtml/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"test","slug":"test","permalink":"https://www.xunhanliu.top/categories/test/"}],"tags":[{"name":"test","slug":"test","permalink":"https://www.xunhanliu.top/tags/test/"}]},{"title":"test_Md+Html","slug":"testMd+Html","date":"2017-07-31T16:00:00.000Z","updated":"2018-07-05T15:05:46.931Z","comments":false,"path":"2017/08/01/testMd+Html/","link":"","permalink":"https://www.xunhanliu.top/2017/08/01/testMd+Html/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 内联style—# 又一个title—2级标题3级标题4级标题外联style","categories":[{"name":"test","slug":"test","permalink":"https://www.xunhanliu.top/categories/test/"}],"tags":[{"name":"test","slug":"test","permalink":"https://www.xunhanliu.top/tags/test/"}]}]}